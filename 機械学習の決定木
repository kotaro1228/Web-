import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_iris

dataset=load_iris()

columns_name=dataset.feature_names

x=dataset.data
t=dataset.target

from sklearn.model_selection import train_test_split
x_train,x_test,t_train,t_test=train_test_split(x,t,test_size=0.3,random_state=0)

from sklearn.tree import DecisionTreeClassifier

model=DecisionTreeClassifier(random_state=0)
model.fit(x_train,t_train)

print(f"train score:{model.score(x_train,t_train)}")
print(f"test score:{model.score(x_test,t_test)}")

model.predict(x_test)

import graphviz
from sklearn.tree import export_graphviz

dot_data=export_graphviz(model)

graph_tree=graphviz.Source(dot_data)
print(graph_tree)

feature_importance = model.feature_importances_
feature_importance

y=columns_name
width=feature_importance

plt.barh(y=y,width=width)

from sklearn.svm import SVC

model=SVC()
model.fit(x_train,t_train)

print(f"train score:{model.score(x_train,t_train)}")
print(f"test score:{model.score(x_test,t_test)}")

from sklearn.preprocessing import StandardScaler

scaler=StandardScaler()
scaler.fit(x_train)

x_train_std=scaler.transform(x_train)
x_test_std=scaler.transform(x_test)

x_train_std.mean()

model_std=SVC(C=5.0,gamma=0.1)

model_std.fit(x_train_std,t_train)

print(f"train score:{model.score(x_train,t_train)}")
print(f"test score:{model.score(x_test,t_test)}")

