pragma solidity 0.8.7;

contract HelloWorld{
    struct Kitty{
        string name;
        address owner;
        uint256 id;
    }
    Kitty[] kitties;
    mapping(address=>uint256[]) ownerToKitty;

    function addKitty(string memory _name,address _owner) public{
        uint id=kitties.length;
        Kitty memory newKitty =Kitty(_name,_owner,id);
        kitties.push(newKitty);

        ownerToKitty[_owner].push(id);
    }

    function getKitty(address _owner) public view returns(string[] memory){
        uint numOfKitties = ownerToKitty[_owner].length;
        string[] memory names = new string[](numOfKitties);

        for(uint i=0;i<numOfKitties; i++){
            uint id= ownerToKitty[_owner][i];
            names[i] = (kitties[id].name);
        }
        return names;
    }
}
